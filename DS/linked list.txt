#include <stdio.h>
#include <stdlib.h>
struct Node
{
    int data;
    struct Node* next;
};
void insertAtBeginning(struct Node** head, int newData) 
{
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));    newNode->data = newData;
    newNode->next = *head;
    *head = newNode;
}
void deleteFromBeginning(struct Node** head)
{
    if (*head == NULL)
    {
        printf("List is empty. Nothing to delete.\n");
        return;
    }
    struct Node* temp = *head; 
    *head = (*head)->next;
    free(temp);
    printf("Node deleted from beginning.\n");
}
void displayList(struct Node* head)
{
    if (head == NULL)
    {
        printf("List is empty.\n");
        return;
    }
    struct Node* temp = head;
    printf("Linked List: ");
    while (temp != NULL)
    {
        printf("%d -> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}
int main()
{
    struct Node* head = NULL;
    insertAtBeginning(&head, 10);
    insertAtBeginning(&head, 20);
    insertAtBeginning(&head, 30);
    displayList(head);
    deleteFromBeginning(&head);
    displayList(head);
    return 0;
}